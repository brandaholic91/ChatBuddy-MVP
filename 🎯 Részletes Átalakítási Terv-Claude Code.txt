üéØ R√©szletes √Åtalak√≠t√°si Terv

  F√ÅZIS 1: El≈ëk√©sz√≠t√©s √©s Backup (1 nap)

  1.1 Biztons√°gi ment√©s
  git branch feature/correct-langgraph-pydantic-integration
  git checkout feature/correct-langgraph-pydantic-integration

  1.2 Teszt baseline l√©trehoz√°sa
  pytest tests/ --tb=short > baseline_test_results.txt

  1.3 F√ºgg≈ës√©g ellen≈ërz√©s
  - requirements.txt friss√≠t√©se sz√ºks√©ges dependenci√°kkal
  - OpenAI API kulcsok ellen≈ërz√©se

  ---
  F√ÅZIS 2: Core Workflow Refactoring (2-3 nap)

  2.1 √öj LangGraph Workflow implement√°ci√≥
  F√°jl: src/workflows/langgraph_workflow_v2.py

  Kulcs v√°ltoztat√°sok:
  - OptimizedPydanticAIToolNode elt√°vol√≠t√°sa
  - Pydantic AI agent-ek k√∂zvetlen tool-k√©nt val√≥ integr√°l√°sa
  - Egyszer≈±s√≠tett state management
  - Caching √°thelyez√©se k√ºl√∂n r√©tegbe

  2.2 Agent integr√°ci√≥ jav√≠t√°sa
  √ârintett f√°jlok:
  - src/agents/general/agent.py - singleton jav√≠t√°s
  - src/agents/marketing/agent.py - singleton jav√≠t√°s
  - src/agents/product_info/agent.py - tool export jav√≠t√°s
  - src/agents/order_status/agent.py - tool export jav√≠t√°s
  - src/agents/recommendations/agent.py - tool export jav√≠t√°s

  V√°ltoztat√°sok:
  - Helyes singleton pattern implement√°ci√≥
  - Tool-ok k√ºl√∂n export√°l√°sa LangGraph sz√°m√°ra
  - RunContext helyes haszn√°lata

  2.3 Coordinator egyszer≈±s√≠t√©se
  F√°jl: src/workflows/coordinator.py

  V√°ltoztat√°sok:
  - Workflow manager v√°lt√°s az √∫j implement√°ci√≥ra
  - Cache handling egyszer≈±s√≠t√©se
  - Error handling finomhangol√°sa

  ---
  F√ÅZIS 3: Testing Framework Update (1-2 nap)

  3.1 Workflow tesztek √°t√≠r√°sa
  F√°jl: tests/test_langgraph_workflow.py

  V√°ltoztat√°sok:
  - √öj workflow tesztel√©se
  - Agent tool integr√°ci√≥ tesztel√©se
  - Performance tesztek friss√≠t√©se

  3.2 Agent tesztek friss√≠t√©se
  √ârintett f√°jlok:
  - tests/test_*_agent.py - mock handling jav√≠t√°sa
  - tests/test_enhanced_workflow.py - √∫j workflow tesztel√©se

  3.3 Integration tesztek
  F√°jl: tests/test_integration_comprehensive.py

  V√°ltoztat√°sok:
  - End-to-end workflow tesztel√©se
  - Cache m≈±k√∂d√©s valid√°l√°sa

  ---
  F√ÅZIS 4: Documentation √©s Cleanup (1 nap)

  4.1 R√©gi k√≥d elt√°vol√≠t√°sa
  - OptimizedPydanticAIToolNode t√∂rl√©se
  - Nem haszn√°lt f√ºggv√©nyek cleanup-ja
  - Import-ok tiszt√≠t√°sa

  4.2 Dokument√°ci√≥ friss√≠t√©se
  - README.md aktualiz√°l√°sa
  - API dokument√°ci√≥ friss√≠t√©se
  - Architektur√°lis diagramok m√≥dos√≠t√°sa

  ---
  F√ÅZIS 5: Production Testing (1-2 nap)

  5.1 Performance tesztel√©s
  - Load testing az √∫j workflow-val
  - Memory usage m√©r√©se
  - Redis cache hat√©konys√°g valid√°l√°sa

  5.2 Security validation
  - Penetration testing
  - GDPR compliance ellen≈ërz√©se
  - Audit log m≈±k√∂d√©s valid√°l√°sa

  ---
  üìã Implement√°ci√≥s Sorrennd

  Priorit√°s 1: Kritikus (Workflow Core)

  1. src/workflows/langgraph_workflow_v2.py - √∫j implement√°ci√≥
  2. Agent singleton-ok jav√≠t√°sa
  3. Alapvet≈ë tesztek √°t√≠r√°sa

  Priorit√°s 2: K√∂zepes (Integration)

  1. Coordinator friss√≠t√©se
  2. Cache handling √°t√°ll√≠t√°sa
  3. Integration tesztek

  Priorit√°s 3: Alacsony (Polish)

  1. Documentation
  2. Cleanup
  3. Performance optimization

  ---
  üö® Kock√°zatok √©s Mitig√°ci√≥

  Kock√°zat: Teszt failure-k
  Mitig√°ci√≥: Fokozatos rollout, feature flag-ek haszn√°lata

  Kock√°zat: Performance roml√°s
  Mitig√°ci√≥: Benchmark-ek k√©sz√≠t√©se minden f√°zisn√°l

  Kock√°zat: Dependency conflicts
  Mitig√°ci√≥: Virtual environment, requirements.txt valid√°ci√≥

  ---
  ‚è∞ Id≈ëbecsl√©s: 6-9 munkanap

  Gyors track (6 nap): Minim√°lis testing, egyszer≈±s√≠tett implement√°ci√≥
  Biztons√°gos track (9 nap): Teljes testing, dokument√°ci√≥, performance optimization

  A k√≥d haszn√°lhat√≥ lesz az √°talak√≠t√°s sor√°n is, mivel √∫j f√°jlokat hozunk l√©tre √©s fokozatosan v√°ltunk √°t. A critical path a workflow core √°t√≠r√°sa - ez a legnagyobb kock√°zat, de ezt feature branch-ben biztons√°gosan lehet tesztelni.